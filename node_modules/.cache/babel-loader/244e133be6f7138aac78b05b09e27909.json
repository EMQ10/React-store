{"ast":null,"code":"var _jsxFileName = \"/home/emilie/Desktop/store_final/src/context.js\";\nimport React, { Component } from 'react';\nimport { items, detailProduct } from './items'; //this whole page is to render the items in the database\n//to the various pages\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      carTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      items.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id;\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/emilie/Desktop/store_final/src/context.js"],"names":["React","Component","items","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","carTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","console","log","openModal","closeModal","increment","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {items, detailProduct} from './items';\n\n//this whole page is to render the items in the database\n//to the various pages\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n// this is used to copy the items in the database\n//and render new set of values\n//so that the content will not change when increase the values\n    state = {\n    products:[],\n    detailProduct:detailProduct,\n    cart:[],\n    modalOpen:false,\n    modalProduct:detailProduct,\n    cartSubTotal:0,\n    cartTax:0,\n    carTotal:0,\n    };\n    componentDidMount(){\n        this.setProducts();\n    }\n    setProducts = () =>{\n        let tempProducts = [];\n        items.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n        });\n        this.setState(()=>{\n            return {products:tempProducts}\n        })\n    };\n// get item for details of each products\n    getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n    }\n    handleDetail = id =>{\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct: product}\n        });\n    };\n\n    addToCart = id =>{\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n\n        this.setState(\n            () => {\n            return { products : tempProducts, cart:[...this.state.cart,\n                product] };\n            }, \n            ()=> {console.log(this.state);\n         }\n        );\n    }\n\nopenModal = id =>{\n    const product = this.getItem(id);\n    this.setState(() => {\n        return {modalProduct:product ,modalOpen:true}\n    })\n}\n\ncloseModal = () =>{\n    this.setState(() => {\n        return {modalOpen:false}\n    })\n}\nincrement = (id) \n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart,\n                openModal:this.openModal,\n                closeModal:this.closeModal\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport{ ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}